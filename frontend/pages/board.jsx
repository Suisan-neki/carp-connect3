import { useState, useEffect } from 'react';
import Head from 'next/head';
import Layout from '../components/layout/Layout';
import { useRouter } from 'next/router';
import {
  MessageSquare,
  Heart,
  Reply,
  Plus,
  TrendingUp,
  Clock,
  Users,
  ArrowRight,
  Eye
} from 'lucide-react';

export default function Board() {
  const [topics, setTopics] = useState([
    {
      id: '1',
      author: 'Ëµ§„Éò„É´Â§™ÈÉé',
      title: '‰ªäÊó•„ÅÆË©¶Âêà„Å´„Å§„ÅÑ„Å¶Ë™û„Çç„ÅÜÔºÅ',
      content: '9ÂõûË£è„ÅÆÈÄÜËª¢Âäá„ÄÅÊú¨ÂΩì„Å´ÊÑüÂãï„Åó„Åæ„Åó„ÅüÔºÅ„Åø„Çì„Å™„ÅØ„Å©„ÅÜÊÄù„Å£„ÅüÔºü',
      created_at: '2025/08/12(Êúà) 20:15:23.45',
      likes: 24,
      reply_count: 2,
      category: 'Ë©¶ÂêàÊÑüÊÉ≥'
    },
    {
      id: '4',
      author: '„Çπ„Çø„Ç∏„Ç¢„É†Â∏∏ÈÄ£',
      title: '„Éû„ÉÑ„ÉÄ„Çπ„Çø„Ç∏„Ç¢„É†„ÅÆ„Åä„Åô„Åô„ÇÅ„Ç∞„É´„É°',
      content: '„Çπ„Çø„Ç∏„Ç¢„É†„ÅßÈ£ü„Åπ„Çâ„Çå„ÇãÁæéÂë≥„Åó„ÅÑ„ÇÇ„ÅÆ„ÇíÊïô„Åà„Å¶ÔºÅÁâπ„Å´„Éì„Éº„É´„ÅÆ„Åä„Å§„Åæ„Åø„ÅåÁü•„Çä„Åü„ÅÑ„Åß„Åôüç∫',
      created_at: '2025/08/12(Êúà) 18:30:15.23',
      likes: 18,
      reply_count: 1,
      category: '„Ç∞„É´„É°'
    },
    {
      id: '6',
      author: 'ÂøúÊè¥Âõ£Èï∑',
      title: 'Êù•ÈÄ±„ÅÆÂ∑®‰∫∫Êà¶„ÄÅ‰∏ÄÁ∑í„Å´ÂøúÊè¥„Åó„Åæ„Åõ„Çì„ÅãÔºü',
      content: 'Êù•ÈÄ±„ÅÆÂ∑®‰∫∫Êà¶„ÅÆ„ÉÅ„Ç±„ÉÉ„Éà„ÇíÂèñ„Çä„Åæ„Åó„ÅüÔºÅ‰∏ÄÁ∑í„Å´ÂøúÊè¥„Åó„Å¶„Åè„Çå„Çã‰ª≤Èñì„ÇíÂãüÈõÜ‰∏≠„Åß„Åô„ÄÇ',
      created_at: '2025/08/12(Êúà) 16:45:08.91',
      likes: 31,
      reply_count: 0,
      category: 'ÂøúÊè¥ÂãüÈõÜ'
    }
  ]);

  const [newTopic, setNewTopic] = useState({
    title: '',
    content: '',
    category: 'Ë©¶ÂêàÊÑüÊÉ≥'
  });

  const [showNewTopicForm, setShowNewTopicForm] = useState(false);
  const categories = ['Ë©¶ÂêàÊÑüÊÉ≥', '„Ç∞„É´„É°', 'ÂøúÊè¥ÂãüÈõÜ', 'Êà¶ÂäõÂàÜÊûê', '„Åù„ÅÆ‰ªñ'];
  const router = useRouter();

  const handleSubmitTopic = (e) => {
    e.preventDefault();
    if (newTopic.title && newTopic.content) {
      const topic = {
        id: String(topics.length + 1),
        author: '„ÅÇ„Å™„Åü',
        title: newTopic.title,
        content: newTopic.content,
        created_at: new Date().toLocaleString('ja-JP', {
          year: 'numeric',
          month: '2-digit',
          day: '2-digit',
          weekday: 'short',
          hour: '2-digit',
          minute: '2-digit',
          second: '2-digit'
        }).replace(/\//g, '/').replace(',', ''),
        likes: 0,
        reply_count: 0,
        category: newTopic.category
      };
      setTopics([topic, ...topics]);
      setNewTopic({ title: '', content: '', category: 'Ë©¶ÂêàÊÑüÊÉ≥' });
      setShowNewTopicForm(false);
    }
  };

  const handleTopicClick = (topicId) => {
    router.push(`/board/${topicId}`);
  };

  return (
    <>
      <Head>
        <title>Êé≤Á§∫Êùø - „Ç´„Éº„Éó„Ç≥„Éç„ÇØ„Éà</title>
      </Head>

      <Layout>
        <div className="space-y-6">
          {/* Header */}
          <div className="carp-card">
            <div className="carp-card-header">
              <h1 className="text-xl font-bold">„Ç´„Éº„ÉóÊé≤Á§∫Êùø</h1>
              <p className="text-red-100 mt-1">„Ç´„Éº„Éó„Éï„Ç°„É≥ÂêåÂ£´„ÅßÊÉÖÂ†±‰∫§Êèõ„Åó„Çà„ÅÜÔºÅ</p>
            </div>
          </div>

          {/* New Topic Button */}
          <div className="flex justify-end">
            <button
              onClick={() => setShowNewTopicForm(true)}
              className="carp-btn carp-btn-primary"
            >
              <Plus className="h-4 w-4" />
              <span>Êñ∞Ë¶è„Éà„Éî„ÉÉ„ÇØ‰ΩúÊàê</span>
            </button>
          </div>

          {/* New Topic Form */}
          {showNewTopicForm && (
            <div className="carp-card">
              <div className="carp-card-header">
                <h2 className="text-lg font-semibold">Êñ∞„Åó„ÅÑ„Éà„Éî„ÉÉ„ÇØ</h2>
              </div>
              <div className="carp-card-content">
                <form onSubmit={handleSubmitTopic} className="space-y-4">
                  <div className="carp-form-group">
                    <label className="carp-label">„Ç´„ÉÜ„Ç¥„É™„Éº</label>
                    <select
                      value={newTopic.category}
                      onChange={(e) => setNewTopic({ ...newTopic, category: e.target.value })}
                      className="carp-input"
                    >
                      {categories.map((category) => (
                        <option key={category} value={category}>
                          {category}
                        </option>
                      ))}
                    </select>
                  </div>
                  <div className="carp-form-group">
                    <label className="carp-label">„Çø„Ç§„Éà„É´</label>
                    <input
                      type="text"
                      value={newTopic.title}
                      onChange={(e) => setNewTopic({ ...newTopic, title: e.target.value })}
                      className="carp-input"
                      placeholder="„Éà„Éî„ÉÉ„ÇØ„ÅÆ„Çø„Ç§„Éà„É´„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ"
                      required
                    />
                  </div>
                  <div className="carp-form-group">
                    <label className="carp-label">ÂÜÖÂÆπ</label>
                    <textarea
                      value={newTopic.content}
                      onChange={(e) => setNewTopic({ ...newTopic, content: e.target.value })}
                      rows={4}
                      className="carp-input carp-textarea"
                      placeholder="„Éà„Éî„ÉÉ„ÇØ„ÅÆÊúÄÂàù„ÅÆÊäïÁ®øÂÜÖÂÆπ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ"
                      required
                    />
                  </div>
                  <div className="flex space-x-3">
                    <button type="submit" className="carp-btn carp-btn-primary">
                      „Éà„Éî„ÉÉ„ÇØ‰ΩúÊàê
                    </button>
                    <button
                      type="button"
                      onClick={() => setShowNewTopicForm(false)}
                      className="carp-btn carp-btn-ghost"
                    >
                      „Ç≠„É£„É≥„Çª„É´
                    </button>
                  </div>
                </form>
              </div>
            </div>
          )}

          {/* Topic List */}
          <div className="carp-board">
            {topics.map((topic) => (
              <div key={topic.id} className="carp-board-post cursor-pointer hover:bg-red-50 transition-colors" onClick={() => handleTopicClick(topic.id)}>
                <div className="carp-board-post-header flex justify-between items-center">
                  <div>
                    <span className="carp-board-post-name font-bold text-lg">{topic.title}</span>
                    <span className="inline-block bg-red-100 text-red-600 text-xs px-2 py-1 rounded ml-2">
                      {topic.category}
                    </span>
                  </div>
                  <div className="text-sm text-gray-500 flex items-center space-x-2">
                    <Users className="h-4 w-4" />
                    <span>{topic.author}</span>
                    <Clock className="h-4 w-4" />
                    <span>{topic.created_at}</span>
                  </div>
                </div>
                <div className="carp-board-post-content text-gray-700 mt-2 line-clamp-2">
                  {topic.content}
                </div>
                <div className="flex items-center space-x-4 mt-3 text-sm text-gray-500">
                  <div className="flex items-center space-x-1">
                    <Heart className="h-4 w-4" />
                    <span>{topic.likes} „ÅÑ„ÅÑ„Å≠</span>
                  </div>
                  <div className="flex items-center space-x-1">
                    <MessageSquare className="h-4 w-4" />
                    <span>{topic.reply_count} Ëøî‰ø°</span>
                  </div>
                  <div className="flex items-center space-x-1">
                    <Eye className="h-4 w-4" />
                    <span>{topic.reply_count} Èñ≤Ë¶ß</span> {/* ‰ªÆ„ÅßËøî‰ø°Êï∞„ÇíÈñ≤Ë¶ßÊï∞„Å®„Åó„Å¶Ë°®Á§∫ */}
                  </div>
                  <button className="carp-board-reply-link text-xs flex items-center space-x-1">
                    <span>„Éà„Éî„ÉÉ„ÇØ„ÇíË¶ã„Çã</span>
                    <ArrowRight className="h-3 w-3" />
                  </button>
                </div>
              </div>
            ))}
          </div>

          {/* Load More */}
          <div className="text-center">
            <button className="carp-btn carp-btn-ghost">
              „ÇÇ„Å£„Å®Ë¶ã„Çã
            </button>
          </div>
        </div>
      </Layout>
    </>
  );
}
